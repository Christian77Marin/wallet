name: Generate OpenAPI Documentation

on:
  push:
    branches:
      - main  # Cambia esto a la rama que prefieras

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'  # Cambia a la versiÃ³n que necesites

    - name: Install Axios
      run: npm install axios

    - name: Generate OpenAPI Documentation
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        node -e "
        const { execSync } = require('child_process');
        const axios = require('axios');
        const fs = require('fs');

        const apiKey = process.env.OPENAI_API_KEY;
        if (!apiKey) {
          throw new Error('OPENAI_API_KEY is not defined');
        }

        async function getChangedFiles() {
          try {
            const output = execSync('git diff --name-only HEAD || git diff --name-only HEAD~1 HEAD').toString();
            return output.split('\\n').filter(file => file.endsWith('.js') || file.endsWith('.ts'));
          } catch (error) {
            console.error('Error getting changed files:', error);
            return [];
          }
        }

        async function extractEndpoints(files) {
          // Implement logic to extract endpoints from the given files
          // This is a placeholder function
          return files.map(file => \`Endpoints from \${file}\`);
        }

        async function generateDocs() {
          try {
            const changedFiles = await getChangedFiles();
            const endpoints = await extractEndpoints(changedFiles);
            const response = await axios.post('https://api.openai.com/v1/responses', {
              model: 'gpt-4o',
              prompt: \`Generate OpenAPI documentation for the following endpoints: \${endpoints.join(', ')}\`,
              max_tokens: 1500,
              temperature: 0.5,
            }, {
              headers: {
                'Authorization': \`Bearer \${apiKey}\`,
                'Content-Type': 'application/json'
              }
            });
            fs.writeFileSync('openapi.yaml', response.data.choices[0].text);
            console.log('OpenAPI documentation generated successfully.');
          } catch (error) {
            console.error('Error generating OpenAPI documentation:', error);
          }
        }

        generateDocs();
        "
