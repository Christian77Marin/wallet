name: Generate OpenAPI Documentation

on:
  push:
    branches:
      - main  # Cambia esto a la rama que prefieras

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'  # Cambia a la versiÃ³n que necesites

    - name: Install Axios
      run: npm install axios

    - name: Generate OpenAPI Documentation
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        node -e "
        const { execSync } = require('child_process');
        const axios = require('axios');
        const fs = require('fs');

        const apiKey = process.env.OPENAI_API_KEY;
        if (!apiKey) {
          throw new Error('OPENAI_API_KEY is not defined');
        }

        async function getChangedFiles() {
          try {
            const output = execSync('git diff --name-only HEAD || git diff --name-only HEAD~1 HEAD').toString();
            return output.split('\\n').filter(file => file.endsWith('.js') || file.endsWith('.ts'));
          } catch (error) {
            console.error('Error getting changed files:', error);
            return [];
          }
        }

        async function generateDocs() {
          try {
            const changedFiles = await getChangedFiles();
            if (changedFiles.length === 0) {
              console.log('No relevant files changed. Skipping documentation generation.');
              return;
            }
            
            // Create a simple string to describe the changed files
            const filesStr = changedFiles.join(', ');
            console.log('Files changed:', filesStr);
            
            const response = await axios.post('https://api.openai.com/v1/responses', {
              model: 'gpt-4o',
              text: {
                format: {
                  type: 'text'
                }
              },
              prompt: 'Generate OpenAPI documentation (YAML format) based on the following information about changed endpoints: ' + filesStr,
              max_tokens: 1500,
              temperature: 0.5,
            }, {
              headers: {
                'Authorization': 'Bearer ' + apiKey,
                'Content-Type': 'application/json'
              }
            });

            // Handle the new response structure
            if (response.data && 
                response.data.output && 
                response.data.output.length > 0 && 
                response.data.output[0].content && 
                response.data.output[0].content.length > 0) {
              
              const generatedText = response.data.output[0].content[0].text;
              fs.writeFileSync('openapi.yaml', generatedText);
              console.log('OpenAPI documentation generated successfully.');
            } else {
              console.error('Unexpected response format from OpenAI API:', JSON.stringify(response.data, null, 2));
            }
          } catch (error) {
            console.error('Error generating OpenAPI documentation:');
            if (error.response) {
              // The request was made and the server responded with a status code
              // that falls out of the range of 2xx
              console.error('Status:', error.response.status);
              console.error('Data:', JSON.stringify(error.response.data, null, 2));
              console.error('Headers:', error.response.headers);
            } else if (error.request) {
              // The request was made but no response was received
              console.error('Request:', error.request);
            } else {
              // Something happened in setting up the request that triggered an Error
              console.error('Error Message:', error.message);
            }
            console.error('Config:', error.config);
            // Optionally re-throw or exit with error code
            process.exit(1);
          }
        }

        generateDocs();
        "
